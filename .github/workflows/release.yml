name: Build and Release

on:
  push:
    tags:
      - 'v*.*.*'

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Node.js
      uses: actions/setup-node@v2
      with:
        node-version: '20'

    - name: Install npm dependencies
      run: npm install

    - name: Build assets
      run: npm run build

    - name: Set up PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: '8.1'

    - name: Install Composer dependencies
      run: composer install --no-dev

    - name: Remove unnecessary files
      run: |
        rm -rf src node_modules .git .github .gitignore package.json package-lock.json composer.json composer.lock phpcs.xml.dist

    - name: Create archive
      env:
        REPOSITORY_NAME: ${{ github.repository }}
        TAG_NAME: ${{ github.ref_name }}
      run: zip -r ${REPOSITORY_NAME##*/}-${TAG_NAME}.zip .

    - name: Upload Release Artifact
      uses: actions/upload-artifact@v2
      env:
        REPOSITORY_NAME: ${{ github.repository }}
        TAG_NAME: ${{ github.ref_name }}
      with:
        name: ${REPOSITORY_NAME##*/}-${TAG_NAME}.zip
        path: ${REPOSITORY_NAME##*/}-${TAG_NAME}.zip

  release:
    needs: build
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Download artifact
      uses: actions/download-artifact@v2
      env:
        REPOSITORY_NAME: ${{ github.repository }}
        TAG_NAME: ${{ github.ref_name }}
      with:
        name: ${REPOSITORY_NAME##*/}-${TAG_NAME}.zip

    - name: Create GitHub Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
        draft: false
        prerelease: false

    - name: Upload Release Asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        REPOSITORY_NAME: ${{ github.repository }}
        TAG_NAME: ${{ github.ref_name }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./$(REPOSITORY_NAME##*/)-${TAG_NAME}.zip
        asset_name: $(REPOSITORY_NAME##*/)-${TAG_NAME}.zip
        asset_content_type: application/zip
